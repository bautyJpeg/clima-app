{"ast":null,"code":"var _jsxFileName = \"F:\\\\openweather-react-main\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    loadingData,\n    showData,\n    weather,\n    forecast\n  } = _ref;\n  const [myWeather, setMyWeather] = React.useState();\n  var today = new Date();\n  var day = today.getDate();\n  var month = today.getMonth() + 1;\n  var year = today.getFullYear();\n  var date = day + '/' + month + '/' + year;\n  var url = \"\";\n  var iconUrl = \"\";\n  var iconUrl3 = \"\";\n  var iconUrl6 = \"\";\n  var iconUrl9 = \"\";\n  var forecastDate3 = \"\";\n  var forecastDate6 = \"\";\n  var forecastDate9 = \"\";\n\n  if (loadingData) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (showData) {\n    url = \"http://openweathermap.org/img/w/\";\n    iconUrl = url + weather.weather[0].icon + \".png\";\n    iconUrl3 = url + forecast.list[1].weather[0].icon + \".png\";\n    iconUrl6 = url + forecast.list[2].weather[0].icon + \".png\";\n    iconUrl9 = url + forecast.list[3].weather[0].icon + \".png\";\n    forecastDate3 = forecast.list[1].dt_txt.substring(8, 10) + '/' + forecast.list[1].dt_txt.substring(5, 7) + '/' + forecast.list[1].dt_txt.substring(0, 4) + ' ' + forecast.list[1].dt_txt.substring(11, 13);\n    forecastDate6 = forecast.list[2].dt_txt.substring(8, 10) + '/' + forecast.list[2].dt_txt.substring(5, 7) + '/' + forecast.list[2].dt_txt.substring(0, 4) + ' ' + forecast.list[2].dt_txt.substring(11, 13);\n    forecastDate9 = forecast.list[3].dt_txt.substring(8, 10) + '/' + forecast.list[3].dt_txt.substring(5, 7) + '/' + forecast.list[3].dt_txt.substring(0, 4) + ' ' + forecast.list[3].dt_txt.substring(11, 13);\n  }\n\n  const localTime = new Date().getTime();\n  const localOffset = new Date().getTimezoneOffset() * 60000;\n  const currentUtcTime = localOffset + localTime;\n  const cityOffset = currentUtcTime + 1000 * weather.timezone;\n  const cityTime = new Date(cityOffset).toTimeString().split(' ');\n  let currenthour = cityTime[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: showData === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 mx-auto bg-primary text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: weather.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-date\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-temp\",\n              children: [(weather.main.temp - 273.15).toFixed(1), \"\\xBAC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-desc\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: iconUrl,\n                alt: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 62\n              }, this), weather.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://i.pinimg.com/564x/91/f3/5e/91f35ed63f4b0ee38d7657378d9b64b4.jpg\",\n              className: \"img-fluid rounded-start\",\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body text-start mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: [\"Temperatura m\\xE1xima: \", (weather.main.temp_max - 273.15).toFixed(1), \"\\xBAC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: [\"Temperatura m\\xEDnima: \", (weather.main.temp_min - 273.15).toFixed(1), \"\\xBAC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: [\"sensaci\\xF3n t\\xE9rmica: \", (weather.main.feels_like - 273.15).toFixed(1), \"\\xBAC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: [\"Humedad: \", weather.main.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-text\",\n                children: [\"Velocidad del viento: \", weather.wind.speed, \"m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [forecastDate3, \"h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconUrl3,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 72\n                  }, this), forecast.list[1].weather[0].description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temp\",\n                  children: [(forecast.list[1].main.temp - 273.15).toFixed(1), \"\\xBAC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [forecastDate6, \"h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconUrl6,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 72\n                  }, this), forecast.list[2].weather[0].description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temp\",\n                  children: [(forecast.list[2].main.temp - 273.15).toFixed(1), \"\\xBAC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [forecastDate9, \"h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"description\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: iconUrl9,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 72\n                  }, this), forecast.list[3].weather[0].description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"temp\",\n                  children: [(forecast.list[3].main.temp - 273.15).toFixed(1), \"\\xBAC\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"card-text\",\n                  children: [\"Hora: \", currenthour]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 121\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: \"Sin datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"FcgNQ9r9r9cBR7aW3LBGMG8A/VI=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["F:/openweather-react-main/src/components/Card.js"],"names":["React","Spinner","Card","loadingData","showData","weather","forecast","myWeather","setMyWeather","useState","today","Date","day","getDate","month","getMonth","year","getFullYear","date","url","iconUrl","iconUrl3","iconUrl6","iconUrl9","forecastDate3","forecastDate6","forecastDate9","icon","list","dt_txt","substring","localTime","getTime","localOffset","getTimezoneOffset","currentUtcTime","cityOffset","timezone","cityTime","toTimeString","split","currenthour","name","main","temp","toFixed","description","temp_max","temp_min","feels_like","humidity","wind","speed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Spinner from './Spinner';\n\nconst Card = ({loadingData, showData, weather, forecast}) => {\n\n    const [myWeather, setMyWeather] = React.useState();\n    \n    var today = new Date();\n    var day = today.getDate();\n    var month = today.getMonth() + 1;\n    var year = today.getFullYear();\n    var date = day + '/' + month + '/' + year;\n\n    var url = \"\";\n    var iconUrl = \"\";\n\n    var iconUrl3 = \"\";\n    var iconUrl6 = \"\";\n    var iconUrl9 = \"\";\n\n    var forecastDate3 = \"\";\n    var forecastDate6 = \"\";\n    var forecastDate9 = \"\";\n\n    if(loadingData){\n        return  <Spinner />;\n    }\n\n    if(showData){\n        url = \"http://openweathermap.org/img/w/\";\n        iconUrl = url + weather.weather[0].icon + \".png\";\n        \n        iconUrl3 = url + forecast.list[1].weather[0].icon + \".png\";\n        iconUrl6 = url + forecast.list[2].weather[0].icon + \".png\";\n        iconUrl9 = url + forecast.list[3].weather[0].icon + \".png\";\n\n        forecastDate3 = forecast.list[1].dt_txt.substring(8, 10) + '/' + forecast.list[1].dt_txt.substring(5, 7) + '/' + forecast.list[1].dt_txt.substring(0, 4) + ' ' +  forecast.list[1].dt_txt.substring(11, 13);\n        forecastDate6 = forecast.list[2].dt_txt.substring(8, 10) + '/' + forecast.list[2].dt_txt.substring(5, 7) + '/' + forecast.list[2].dt_txt.substring(0, 4) + ' ' +  forecast.list[2].dt_txt.substring(11, 13);\n        forecastDate9 = forecast.list[3].dt_txt.substring(8, 10) + '/' + forecast.list[3].dt_txt.substring(5, 7) + '/' + forecast.list[3].dt_txt.substring(0, 4) + ' ' +  forecast.list[3].dt_txt.substring(11, 13);\n    }\n        \n    const localTime = new Date().getTime()\n    const localOffset = new Date().getTimezoneOffset() * 60000\n    const currentUtcTime = localOffset + localTime\n    const cityOffset = currentUtcTime + 1000 * weather.timezone\n    const cityTime = new Date(cityOffset).toTimeString().split(' ')\n    let currenthour = cityTime [0]\n        \n        \n\n    return (\n        <div className=\"mt-5\">\n\n            {\n                showData === true ? (\n\n                    <div className=\"container\">\n                        <div className=\"card mb-3 mx-auto bg-primary text-light\">\n                            <div className=\"row g-0\">\n                                <div className=\"col-md-4\">\n                                    <h3 className=\"card-title\">{weather.name}</h3>\n                                    <p className=\"card-date\">{date}</p>\n                                    <h5 className=\"card-temp\">{(weather.main.temp - 273.15).toFixed(1)}ºC</h5>\n                                    <p className=\"card-desc\"><img src={iconUrl} alt=\"icon\"/>{weather.weather[0].description}</p>\n                                    <img src=\"https://i.pinimg.com/564x/91/f3/5e/91f35ed63f4b0ee38d7657378d9b64b4.jpg\" className=\"img-fluid rounded-start\" alt=\"...\"/>\n                                    \n                                </div>\n                                <div className=\"col-md-8\">\n                                    <div className=\"card-body text-start mt-2\">\n                                        <h5 className=\"card-text\">Temperatura máxima: {(weather.main.temp_max - 273.15).toFixed(1)}ºC</h5>\n                                        <h5 className=\"card-text\">Temperatura mínima: {(weather.main.temp_min - 273.15).toFixed(1)}ºC</h5>\n                                        <h5 className=\"card-text\">sensación térmica: {(weather.main.feels_like- 273.15).toFixed(1)}ºC</h5>\n                                        <h5 className=\"card-text\">Humedad: {weather.main.humidity}%</h5>\n                                        <h5 className=\"card-text\">Velocidad del viento: {weather.wind.speed}m/s</h5>\n                                        \n                                    </div>\n                                    <hr/>\n\n                                    <div className=\"row mt-4\">\n                                        <div className=\"col\">\n                                            <p>{forecastDate3}h</p>\n                                            <p className=\"description\"><img src={iconUrl3} alt=\"icon\"/>{forecast.list[1].weather[0].description}</p>\n                                            <p className=\"temp\">{(forecast.list[1].main.temp - 273.15).toFixed(1)}ºC</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p>{forecastDate6}h</p>\n                                            <p className=\"description\"><img src={iconUrl6} alt=\"icon\"/>{forecast.list[2].weather[0].description}</p>\n                                            <p className=\"temp\">{(forecast.list[2].main.temp - 273.15).toFixed(1)}ºC</p>\n                                        </div>\n                                        <div className=\"col\">\n                                            <p>{forecastDate9}h</p>\n                                            <p className=\"description\"><img src={iconUrl9} alt=\"icon\"/>{forecast.list[3].weather[0].description}</p>\n                                            <p className=\"temp\">{(forecast.list[3].main.temp - 273.15).toFixed(1)}ºC</p><h1 className=\"card-text\">Hora: {currenthour}</h1>\n                                        </div>\n\n\n                                    </div>\n\n\n                                </div>\n\n                            </div>\n                        </div>\n\n                    </div>\n\n                ):(\n                    <h2 className=\"text-light\">Sin datos</h2>\n                )\n            }\n\n\n\n        </div>\n\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}